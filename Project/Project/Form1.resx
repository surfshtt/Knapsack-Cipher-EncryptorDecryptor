<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vmezcT2HAAAAAElFTkSuQmCC
</value>
  </data>
</root>